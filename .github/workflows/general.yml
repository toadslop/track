name: Rust

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - master

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.7.1
  SQLX_FEATURES: "rustls,postgres"
  TRACK__DABABASE_USER: user
  TRACK__DABABASE_PASSWORD: password
  TRACK__DABABASE_NAME: track
  TRACK__DABABASE_PORT: 5433
  TRACK__DABABASE_HOST: localhost
  TRACK__APPLICATION_ENVIRONMENT: test
  TRACK__AUTH_JWTSECRET: secret

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ env.TRACK__DABABASE_USER }}
          POSTGRES_PASSWORD: ${{ env.TRACK__DABABASE_PASSWORD }}
          POSTGRES_DB: ${{ env.TRACK__DABABASE_NAME }}
        ports:
          - 5433:5432
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install the Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}

      - name: Install cargo-make
        run:
            cargo install
              --no-default-features
              --force
              cargo-make

      - name: Run tests
        run: cargo test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ env.TRACK__DABABASE_USER }}
          POSTGRES_PASSWORD: ${{ env.TRACK__DABABASE_PASSWORD }}
          POSTGRES_DB: ${{ env.TRACK__DABABASE_NAME }}
        ports:
          - 5433:5432
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      - name: Linting
        run: cargo clippy -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ env.TRACK__DABABASE_USER }}
          POSTGRES_PASSWORD: ${{ env.TRACK__DABABASE_PASSWORD }}
          POSTGRES_DB: ${{ env.TRACK__DABABASE_NAME }}
        ports:
          - 5433:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      - name: Generate code coverage
        run: RUST_LOG=debug cargo install cargo-tarpaulin && cargo tarpaulin --verbose --workspace